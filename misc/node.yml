annotation:
  - name
  - parameters
modifier:
  - name
class:
  - annotations
  - modifiers
  - name
  - superClass
  - implementClasses
  - constructor
  - instanceFields
  - instanceMethods
  - staticFields
  - staticMethods
integer:
  - value
parameter:
  - modifiers
  - type
  - name
array_access:
  - receiver
  - key
boolean:
  - value
break: []
comment: []
constructor_declaration:
  - name
  - modifiers
  - throws
  - parameters
  - statements
  - nativeFunction
continue: []
dml:
  - type
  - object
double:
  - value
field_declaration:
  - type
  - modifiers
  - declarators
field_declarator:
  - name
  - modifiers
  - expression
try:
  - block
  - catchClause
  - finallyBlock
catch:
  - modifiers
  - type
  - identifier
  - block
finally:
  - block
for:
  - forControl
  - statements
forenum:
  - type
  - identifier
  - listExpression
  - statements
forControl:
  - forInit
  - expression
  - forUpdate
enhancedForControl:
  - modifiers
  - type
  - variableDeclaratorId
  - expression
if:
  - condition
  - ifStatement
  - elseStatement
method_declaration:
  - name
  - modifiers
  - returnType
  - parameters
  - throws
  - statements
  - nativeFunction
method_invocation:
  - receiver
  - parameters
  - methodName
name:
  - value
new:
  - className
  - parameters
'null': []
object:
  - classNode
  - genericType
  - instanceFields
  - genericsNode
binary_operator:
  - type
  - left
  - right
return:
  - expression
throw:
  - expression
soql:
  - soql
string:
  - value
switch:
  - expression
  - statements
trigger:
  - name
  - object
  - triggerTimings
  - statements
trigger_timing:
  - timing
  - dmm
variable_declaration:
  - modifiers
  - type
  - declarators
variable_declarator:
  - left
  - right
when:
  - condition
  - statements
while:
  - condition
  - statements
  - doFlag
nothingStatement: []
castExpression:
  - type
  - expression
fieldAccess:
  - expression
  - fieldName
type:
  - name
  - parameters
